{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBACZD,SAASC,cAAc,yBAIjD,SAASI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAXPR,EAAKgB,iBAAiB,UAgBtB,SAAkBC,GAChBA,EAAIC,iBAKJ,IAJA,IAAIC,EAAaC,OAAOjB,EAAMkB,OAC1BC,EAAYF,OAAOhB,EAAKiB,OACxBE,EAAgBH,OAAOf,EAAOgB,OAEzBG,EAAI,EAAGA,EAAID,EAAeC,GAAK,EACtClB,EAAc,EAAIkB,EAAGL,EAAaK,EAAIF,GACnCG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUoB,EAAKD,EAALX,MACjBa,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAU0B,EAAKP,EAALX,MAClBa,EAAA9B,GAAS+B,OAAOK,QACd,sBAAqCH,OAAfxB,EAAS,QAAYwB,OAANE,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst createPromisesBtn = document.querySelector('button[type=\"submit\"]');\n\nform.addEventListener('submit', onSumbit);\n\nfunction createPromise(position, delay) {\n  const promice = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promice;\n}\n\nfunction onSumbit(evt) {\n  evt.preventDefault();\n  let firstDelay = Number(delay.value);\n  let stepDelay = Number(step.value);\n  let amountPromise = Number(amount.value);\n\n  for (let i = 0; i < amountPromise; i += 1) {\n    createPromise(1 + i, firstDelay + i * stepDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setTimeout","Math","random","delay","addEventListener","evt","preventDefault","firstDelay","Number","value","stepDelay","amountPromise","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.343a3782.js.map"}